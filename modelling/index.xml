<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modelling on Advanced Analytics for Web</title>
    <link>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/</link>
    <description>Recent content in Modelling on Advanced Analytics for Web</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 16 Aug 2022 17:24:05 +0100</lastBuildDate><atom:link href="https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Load sample data (optional)</title>
      <link>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_0/</guid>
      <description>In case you would like to see how datamodelling works and you do not yet have a running pipeline with enough test data you can download and use our sample data:
Attachments sample_events.csv (35 MB) In the below example we will be loading the data using the Snowflake Web Interface. For more details please check out the official Snowflake documentation.
Step 1: Create the ATOMIC schema in your target database (unless it exists already): CREATE SCHEMA TARGET_DB.</description>
    </item>
    
    <item>
      <title>Install Snowplow dbt Package</title>
      <link>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_1/</guid>
      <description>Step 1: Add snowplow-web package Add the snowplow-web package to your packages.yml file. The latest version can be found here
packages: - package: snowplow/snowplow_web version: 0.9.0 Step 2: Install the package Install the package by running:
dbt deps </description>
    </item>
    
    <item>
      <title>Setup dbt Package</title>
      <link>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_2/</guid>
      <description>At this stage you should EITHER:
Have tracking and enrichment setup, as well as: Data in the ATOMIC.EVENTS table Enabled IAB, UA parser and YAUAA enrichments In case you skipped the tracking and enrichment steps and used our SAMPLE_DATA.csv instead you should have: Data in the ATOMIC.SAMPLE_EVENTS table Step 1: Setup Variables Edit the dbt_project.yml which can be found at [dbt_project_name]/dbt_packages/snowplow_web/dbt_project.yml with the below options.
snowplow__start_date: The date of the first tracked event inside your atomic.</description>
    </item>
    
    <item>
      <title>Testing the output</title>
      <link>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://snowplow-incubator.github.io/advanced-analytics-web-accelerator/modelling/modelling_3/</guid>
      <description>Data should now be loaded into your warehouse, next we will check the models output.
Step 1: Check the output schemas Head to the SQL editor of your choice (e.g.: Snowflake Web UI) to check the model&amp;rsquo;s output. You should be able to see three new schemas created:
[your_custom_schema]_scratch: drop and recompute models that aid the incremental run [your_custom_schema]_derived: main output models you can use in your downstream models and reporting [your_custom_schema]_manifest: tables that help the integrity and core incremental logic of the model Step 2: Run dbt test Run our recommended selector specified tests to identify potential issues with the data:</description>
    </item>
    
  </channel>
</rss>
